 // RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc7280.mecanum_drive_test.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc7280.mecanum_drive_test.Robot;

/**
 *
 */
public class Drive extends Command {

    public Drive() {
        
        requires(Robot.base);

    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        if (Robot.oi.motionStick.getRawButton(1)){
            switch (Robot.netWorkTable.ballPosition) {
                case 1: // the ball is on the left
                    Robot.base.drive(Robot.oi.motionStick.getY(), Robot.oi.motionStick.getX(), -0.6);
                    break;
                
                case 3: // the ball is in the center 
                    Robot.base.drive(-0.3, 0, 0);
                    break;

                case 2: // the ball is on the right
                    Robot.base.drive(Robot.oi.motionStick.getY(), Robot.oi.motionStick.getX(), 0.6);
                    break;

                case 5:
                    Robot.base.drive(Robot.oi.motionStick.getY(), Robot.oi.motionStick.getX(), Robot.oi.motionStick.getZ());
                    break;
            }
        } else {
            Robot.base.drive(Robot.oi.motionStick.getY(), Robot.oi.motionStick.getX(), Robot.oi.motionStick.getZ());
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        // end();
        // two cases: 1 the base can move, 2 the base can't move
        Robot.base.stop();
    }
}
